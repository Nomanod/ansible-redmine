# Upstream Ruby process cluster for load balancing
upstream thin_cluster {
    server unix:/tmp/thin.0.sock;
    server unix:/tmp/thin.1.sock;
    server unix:/tmp/thin.2.sock;
    server unix:/tmp/thin.3.sock;
}

server {
        listen [::]:80;
	server_name  {{ redmine_domain }};
        return 301 https://$server_name$request_uri;  # enforce https
}

server {
    listen       [::]:443;
    ssl on;
    ssl_certificate {{ ssl_cert }};
    ssl_certificate_key {{ ssl_key }};


    server_name  {{ redmine_domain }};

    access_log  /var/log/nginx/{{ redmine_domain }}-access;
    error_log   /var/log/nginx/{{ redmine_domain }}-error;

    include {{ redmine_proxy }};
    root {{ redmine_public }};
    proxy_redirect off;

    location / {
        try_files $uri/index.html $uri.html $uri @cluster;
    }

    location @cluster {
        proxy_pass http://thin_cluster;
    }
}

